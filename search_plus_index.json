{"./":{"url":"./","title":"项目导航","keywords":"","body":"myBook 一直在努力,从未放弃 简介 开源项目 我的博客 联系方式 安装运行 # gitbook init # gitbook install # gitbook serve 关于GitBook的安装和使用 ➡️ https://www.jianshu.com/p/1f78d8018ea7 交流 & 提问 https://github.com/JoeyBling/myBook/issues 捐赠     如果感觉对您有帮助，请作者喝杯咖啡吧，请注明您的名字或者昵称，方便作者感谢o(￣︶￣)o 微信 支付宝 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 16:47:03 "},"contact.html":{"url":"contact.html","title":"联系方式","summary":"試毅-思伟的联系方式","keywords":"","body":"联系方式 微信 QQ 打赏 微信 支付宝 特别说明： 打赏-赞助请三思，虚拟产品赞助打赏后恕不退款 打赏 68元 以上可以加个人微信畅聊30分钟，非诚勿扰。 打赏 199元 以上可以一对一答疑。 打赏名单默认不会在网站上显示，如需显示请将付款截屏发送至邮箱 joeysiwei@gmail.com 开源推荐 TIP：不分先后顺序，需加入列表的同学可以联系我。 基于SpringBoot + Shiro + MyBatisPlus的权限管理框架：https://gitee.com/zhousiwei/bootplus 自制spring boot starter for fastjson：https://gitee.com/zhousiwei/fastjson-spring-boot-starter SpringBoot集成MyBatisPlus：https://gitee.com/zhousiwei/springboot_mybatisplus 一个会动的简历：https://gitee.com/zhousiwei/anires 微信小程序+微信管理后台+微信用户前台 https://gitee.com/zhousiwei/hqc_mp Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:59:55 "},"blog/":{"url":"blog/","title":"我的博客","summary":"試毅-思伟的技术博客","keywords":"","body":"我的博客 个人博客 GitHub 码云 简书 CSDN 知乎 微博 开源项目 主要涉及技术：Java后端开发、聚合支付、公众号开发、开源爱好者、Linux 博客将不定期更新，请小伙伴们随时关注哦！ 試毅-思伟的技术博客 https://zhousiwei.gitee.io/     欢迎来到試毅-思伟的技术博客，这里将深入探讨相关技术，包括行业动态，架构设计，设计模式，框架使用等。 博客集成了个人简历、不蒜子访问量统计、404页面、百度提交收录链接、GitBook文档、评论系统Gitment、helper-live2d动态模型插件、背景音乐 （网易云音乐）、文章置顶功能 不浮躁，不偏激，不守旧，爱编程，爱后端，爱新技术，爱运动，爱旅行，执行力和学习能力都棒棒哒！ 归档文章 Java Linux ELK日志分析 MySQL Hexo 日记本 捐赠     如果感觉对您有帮助，请作者喝杯咖啡吧，请注明您的名字或者昵称，方便作者感谢o(￣︶￣)o 微信 支付宝 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 16:43:15 "},"opensource/":{"url":"opensource/","title":"开源项目","summary":"試毅-思伟的开源项目","keywords":"","body":"开源项目 SpringBoot集成MyBatisPlus 基于SpringBoot + Shiro + MyBatisPlus的权限管理框架 微信小程序+微信管理后台+微信用户前台 自制spring boot starter for fastjson 一个会动的简历 捐赠     如果感觉对您有帮助，请作者喝杯咖啡吧，请注明您的名字或者昵称，方便作者感谢o(￣︶￣)o 微信 支付宝 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "},"opensource/springboot_mybatisplus.html":{"url":"opensource/springboot_mybatisplus.html","title":"SpringBoot集成MyBatisPlus","summary":"SpringBoot集成MyBatisPlus","keywords":"","body":"SpringBoot集成MyBatisPlus GitHub：https://github.com/JoeyBling/SpringBoot_MyBatisPlus 码云：https://gitee.com/zhousiwei/springboot_mybatisplus 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 项目结构 wstro ├── sql -- 项目SQL语句 │ ├── App -- 项目启动类 │ ├── config -- 配置信息 │ ├── controller -- 控制器 | ├── admin -- 后台管理员控制器 │ ├── service -- 业务逻辑接口 | ├── impl -- 业务逻辑接口实现类 │ ├── dao -- 数据访问接口 │ ├── entity-- 数据持久化实体类 │ ├── datasources -- 多数据源工具类 │ ├── shiro -- Shiro验证框架 │ ├── task -- Quartz定时任务 │ ├── util -- 工具类 | ├── FreeMarker -- 自定义FreeMarker标签 │ ├── resources | ├── mapper -- SQL对应的XML文件 | ├── templates -- FreeMarker模版 │ ├── webapp | ├── statics -- 静态资源 | ├── upload -- 上传文件 | ├── WEB-INF | | ├── templates -- 页面FreeMarker模版 技术选型： 核心框架：Spring Boot 1.5.1 安全框架：Apache Shiro 视图框架：Spring MVC 持久层框架：MyBatis、MyBatisPlus 缓存技术：EhCache、Redis 定时器：Quartz 数据库连接池：Druid 日志管理：SLF4J、Log4j 模版技术：FreeMarker 页面交互：BootStrap、Layer等 本地部署 创建数据库wstro，数据库编码为UTF-8 执行sql/wstro.sql文件，初始化数据 修改application-dev.properties，更新MySQL账号和密码 修改application-dev.properties，更改Redis连接信息 如果不想要Redis服务,注解掉RedisConfig.java的@Configuration注解 Eclipse、IDEA运行App.java，则可启动项目 项目访问路径：http://localhost:8080/admin 账号密码：admin/admin 多数据源配置：需要自己实现，参考DataSourceConfig.java 演示效果图： Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "},"opensource/bootplus.html":{"url":"opensource/bootplus.html","title":"基于SpringBoot + Shiro + MyBatisPlus的权限管理框架","summary":"基于SpringBoot + Shiro + MyBatisPlus的权限管理框架","keywords":"","body":"基于SpringBoot + Shiro + MyBatisPlus的权限管理框架 GitHub：https://github.com/JoeyBling/bootplus 码云：https://gitee.com/zhousiwei/bootplus 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 bootplus bootplus是基于SpringBoot + Shiro + MyBatisPlus的真正restful URL资源无状态认证权限管理框架 项目结构 bootplus ├── sql -- 项目SQL语句 │ ├── App -- 项目启动类 │ ├── config -- 配置信息 │ ├── controller -- 控制器 | ├── admin -- 后台管理员控制器 │ ├── service -- 业务逻辑接口 | ├── impl -- 业务逻辑接口实现类 │ ├── dao -- 数据访问接口 │ ├── entity -- 数据持久化实体类 │ ├── shiro -- Shiro验证框架 │ ├── util -- 工具类 | ├── FreeMarker -- 自定义FreeMarker标签 │ ├── resources | ├── mapper -- SQL对应的XML文件 │ ├── webapp | ├── statics -- 静态资源 | ├── upload -- 上传文件 | ├── WEB-INF | | ├── templates -- 页面FreeMarker模版 技术选型： 核心框架：Spring Boot 1.5.1 安全框架：Apache Shiro 视图框架：Spring MVC 持久层框架：MyBatis、MyBatisPlus 缓存技术：EhCache、Redis 定时器：Quartz 数据库连接池：Druid 日志管理：SLF4J、Log4j 模版技术：FreeMarker 页面交互：BootStrap、Layer等 本地部署： mysql执行sql/bootplus.sql文件，初始化数据 修改application.yml，更新MySQL连接信息 项目访问路径：http://localhost/admin 管理员账号密码：admin/admin 效果展示 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "},"opensource/hqc_mp.html":{"url":"opensource/hqc_mp.html","title":"微信小程序+微信管理后台+微信用户前台","summary":"微信小程序+微信管理后台+微信用户前台","keywords":"","body":"微信小程序+微信管理后台+微信用户前台 GitHub：https://github.com/JoeyBling/hqc_mp 码云：https://gitee.com/zhousiwei/hqc_mp 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 项目结构： hqc_mini_app 微信小程序相关文件 hqc_mp ├── sql -- 项目SQL语句 │ ├── config -- 配置信息 │ ├── controller -- 控制器 | ├── map -- 3D地图 | ├── wx -- 微信前台控制器 | ├── octopus -- 后台管理员控制器 │ ├── service -- 业务逻辑接口 | ├── impl -- 业务逻辑接口实现类 │ ├── dao -- 数据访问接口 ├ ├── entity -- 数据持久化实体类 │ ├── datasources -- 多数据源工具类 │ ├── shiro -- Shiro验证框架 │ ├── task -- Quartz定时任务 │ ├── util -- 项目所用的的所有工具类 | ├── FreeMarker -- 自定义FreeMarker标签 │ ├── payforparking -- 停车付费相关接口WebService │ ├── weather -- 第三方天气查询相关接口WebService │ ├── ws -- 提供给小程序的相关接口WebService │ ├── resources | ├── mapper -- SQL对应的XML文件 │ ├── webapp | ├── map -- 3D地图 | ├── statics -- 静态资源 | ├── upload -- 上传文件 | ├── WEB-INF | | ├── templates -- 页面FreeMarker模版 技术选型： 核心框架：Spring 安全框架：Apache Shiro 视图框架：Spring MVC 持久层框架：MyBatis MyBatis通用Mapper 缓存技术：Redis 定时器：Quartz 数据库连接池：Druid 日志管理：SLF4J、Log4j 模版技术：FreeMarker 页面交互：BootStrap、Layer等 本地部署 创建数据库hqc_mp，数据库编码为UTF-8 执行sql/hqc_mp.sql文件，初始化数据 修改db.properties，更新MySQL账号和密码 修改redis.properties,更改Redis连接信息 Eclipse、IDEA部署Tomcat，则可启动项目 项目访问路径：http://localhost:8080/hqc_mp 账号密码：admin/admin 前台登录用户: 13647910412 123 启动说明: 项目依赖mysql、Redis服务。 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "},"opensource/fastjson-spring-boot-starter.html":{"url":"opensource/fastjson-spring-boot-starter.html","title":"自制spring boot starter for fastjson","summary":"自制spring boot starter for fastjson","keywords":"","body":"自制spring boot starter for fastjson GitHub：https://github.com/JoeyBling/fastjson-spring-boot-starter 码云：https://gitee.com/zhousiwei/fastjson-spring-boot-starter 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 简介 该项目主要利用Spring Boot的自动化配置特性来实现快速的将fastjon引入spring boot使用fastjson解析框架。 源码地址 GitHub：https://github.com/JoeyBling/fastjson-spring-boot-starter 码云：https://gitee.com/zhousiwei/fastjson-spring-boot-starter 我的博客：https://zhousiwei.gitee.io/ 小工具一枚，欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善该Starter 版本基础 Spring Boot：1.5.x FastJson：1.2.15 如何使用 在该项目的帮助下，我们的Spring Boot可以轻松的引入fastjson，主需要做下面两个步骤： 在pom.xml中引入依赖： 当前最新版本 10.10.10.RELEASE 由于spring-boot-starter-parent版本更新问题 spring-boot-starter-parent 2.0.0.RELEASE之前使用 io.gitee.zhousiwei fastjson-spring-boot-starter 8.8.8.RELEASE spring-boot-starter-parent 2.0.0.RELEASE之后使用 io.gitee.zhousiwei fastjson-spring-boot-starter 10.10.10.RELEASE 默认情况下就能在springboot项目中使用fastjson 参数配置 更细致的配置内容参考如下： 配置示例 fastjson: enabled: true media-type: application/json;charset=UTF-8 date-format: yyyy-MM-dd HH:mm:ss 配置说明 默认配置 fastjson: enabled: true 是否启用fastjson(默认为:true) media-type: application/json;charset=UTF-8 媒体类型(默认为:application/json;charset=UTF-8) date-format: yyyy-MM-dd HH:mm:ss 日期格式(默认为:yyyy-MM-dd HH:mm:ss) 8.8.8.RELEASE新增：date-format属性，且配置成功会打印控制台信息:starter for fastJson-----fastJson init success. 贡献者 思伟 Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "},"opensource/anires.html":{"url":"opensource/anires.html","title":"一个会动的简历","summary":"一个会动的简历","keywords":"","body":"一个会动的简历 GitHub：https://github.com/JoeyBling/anires 码云：https://gitee.com/zhousiwei/anires 欢迎使用和Star支持，如使用过程中碰到问题，可以提出Issue，我会尽力完善 本项目源于：https://github.com/jirengu-inc/animating-resume。向作者表示深深的敬意。 This is my resume 预览 使用方法 git clone https://gitee.com/zhousiwei/anires.git cd anires npm install npm run dev 部署方法 编辑 config/index.js，修改第 10 行的 assetsPublicPath，值为 项目名/public。如果你没有修改项目名 anires，则可跳过此步骤。 编译、上传 npm run build git add . git commit -m \"update\" git push 开启 GitHub Pages 功能，把生成的目标文件public/*放在你的web服务器上。 访问地址：https://your-github-username.github.io/anires/public Copyright © 試毅-思伟 2019 all right reserved，powered by 試毅-思伟修订时间： 2019-06-28 14:50:41 "}}